name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  test-doc:
    name: Test documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/install-rust
        with:
          toolchain: nightly
          AWS_ACCESS_KEY_ID: ${{ secrets.ROBOT_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ROBOT_AWS_SECRET_ACCESS_KEY}}

      - name: Build Documentation
        run: cargo +nightly doc --no-deps --all --all-features

  test_stable:
    runs-on: ubuntu-latest-16-core
    strategy:
      fail-fast: false
    name: stable - Test
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-rust
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.ROBOT_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ROBOT_AWS_SECRET_ACCESS_KEY}}

      - run: cargo nextest run --workspace --exclude topos-sequencer-subnet-runtime && cargo test --doc --workspace
        env:
          RUST_LOG: warn,topos=info

  test_nightly:
    runs-on: ubuntu-latest-16-core
    strategy:
      fail-fast: false
    name: nightly - Test
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install-rust
        with:
          toolchain: nightly
          AWS_ACCESS_KEY_ID: ${{ secrets.ROBOT_AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ROBOT_AWS_SECRET_ACCESS_KEY}}

      - run: cargo nextest run --workspace --exclude topos-sequencer-subnet-runtime && cargo test --doc --workspace
        env:
          RUST_LOG: topos=warn

#  cert_delivery:
#    runs-on: ubuntu-latest-16-core
#    needs: [test_stable]
#    strategy:
#      fail-fast: true
#      matrix:
#        value: ["first", "second", "third"]
#    steps:
#      - uses: actions/checkout@v4
#      - uses: ./.github/actions/install-rust
#        with:
#          AWS_ACCESS_KEY_ID: ${{ secrets.ROBOT_AWS_ACCESS_KEY_ID}}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.ROBOT_AWS_SECRET_ACCESS_KEY}}
#      - run: cargo nextest run cert_delivery --locked --no-default-features
#        env:
#          RUST_LOG: topos=warn
